---

- name: Add the PostgreSQL repository key to the apt trusted keys
  ansible.builtin.apt_key: url=https://www.postgresql.org/media/keys/ACCC4CF8.asc
           state=present

- name: Add the PostgreSQL repository to the apt sources list
  ansible.builtin.apt_repository: repo='deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main'
                  update_cache={{ update_apt_cache }}
                  state=present

- name: Ensure locale is available
  community.general.locale_gen: name=en_US.UTF-8

- name: Install PostgreSQL
  ansible.builtin.apt:
    update_cache: "{{ update_apt_cache }}"
    state: present
    name:
      - postgresql
      - postgresql-contrib
      - "{{ base_python_package }}-psycopg2"
  tags: packages

- name: Ensure the PostgreSQL service is running
  ansible.builtin.service:
    name: postgresql
    state: started
    enabled: true
    # TODO: This is likely due to a bug in Ansible.
    # Remove this line in the future.
    # See https://github.com/ansible/ansible/issues/75005
    use: sysvinit

- name: Ensure database is created
  become: true
  become_user: postgres
  community.postgresql.postgresql_db:
    name: "{{ db_name }}"
    encoding: UTF-8
    lc_collate: en_US.UTF-8
    lc_ctype: en_US.UTF-8
    template: template0
    state: present

- name: Ensure user has access to the database
  become: true
  become_user: postgres
  community.postgresql.postgresql_user: db={{ db_name }}
                   name={{ db_user }}
                   password={{ db_password }}
                   encrypted=yes
                   state=present

# If objs is omitted for type "database", it defaults to the database
# to which the connection is established
- name: Grant database privileges to the user.
  become: true
  become_user: postgres
  community.postgresql.postgresql_privs:
    db: "{{ db_name }}"
    privs: ALL
    type: database
    role: "{{ db_user }}"

- name: Grant schema public to the user.
  become: true
  become_user: postgres
  community.postgresql.postgresql_privs:
    db: "{{ db_name }}"
    privs: ALL
    type: schema
    objs: public
    role: "{{ db_user }}"

- name: Ensure user does not have unnecessary privileges
  become: true
  become_user: postgres
  community.postgresql.postgresql_user: name={{ db_user }}
                   role_attr_flags=NOSUPERUSER,NOCREATEDB
                   state=present

- name: Set CA path
  become: true
  become_user: postgres
  community.postgresql.postgresql_set:
    name: ca_cert
    value: "{{ ca_crt_path }}"
  when: postgres_use_ssl is true

- name: Set server certificate path
  become: true
  become_user: postgres
  community.postgresql.postgresql_set:
    name: ssl_cert
    value: "{{ ssl_crt_path }}"
  when: postgres_use_ssl is true

- name: Set server key path
  become: true
  become_user: postgres
  community.postgresql.postgresql_set:
    name: ssl_key
    value: "{{ ssl_key_path }}"
  when: postgres_use_ssl is true

- name: Add server hostname to listen addresses
  become: true
  become_user: postgres
  community.postgresql.postgresql_set:
    db: "{{ db_name }}"
    name: listen_addresses
    value: "127.0.0.1, {{ inventory_hostname }}"
  notify: Restart postgresql

- name: Find out where pg_hba.conf is
  become: true
  become_user: postgres
  community.postgresql.postgresql_query:
    db: "{{ db_name }}"
    query: "show hba_file;"
  register: hba_query_result

- name: Get IP address of main server
  ansible.builtin.setup:
    gather_subset: default_ipv4
  delegate_to: "{{ item }}"
  delegate_facts: true
  loop: "{{ groups['lovelace'] }}"

- name: Allow access from Lovelace server
  become: true
  become_user: postgres
  community.postgresql.postgresql_pg_hba:
    dest: "{{ hba_query_result.query_result.0.hba_file }}"
    contype: "{{ 'hostssl' if postgres_use_ssl else 'host' }}"
    users: "{{ db_user }}"
    databases: "{{ db_name }}"
    method: scram-sha-256
    source: "{{ hostvars[groups.lovelace.0]['ansible_default_ipv4']['address'] }}/32"
    options: "{{ 'clientcert=verify-full' if postgres_use_ssl else '' }}"
  notify: Restart postgresql
